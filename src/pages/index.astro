---
import Navbar from "../components/Navbar.astro";
import Layout from "../layouts/Layout.astro";
import Contact from "../sections/Contact.astro";
import Education from "../sections/Education.astro";
import Hero from "../sections/Hero.astro";
import Projects from "../sections/Projects.astro";
import Skills from "../sections/Skills.astro";
---

<Layout title="Portfolio - Brian Chaparro">
  <main
    class="min-h-screen flex flex-col gap-24 text-gray-600 max-w-screen-lg mx-auto px-4 sm:px-6 lg:p-0"
  >
    <Navbar />
    <Hero />
    <Projects />
    <Skills />
    <Education />
    <Contact />
  </main>
</Layout>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const sections = document.querySelectorAll("section");
    const menuLarge = document.querySelectorAll("#menuLarge a");
    const menuSmall = document.querySelectorAll("#menuSmall a");

    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          const sectionId = entry.target.getAttribute("id");

          if (entry.isIntersecting) {
            menuLarge.forEach((link) => {
              if (link.getAttribute("href") === `#${sectionId}`) {
                link.classList.remove("text-gray-700");
                link.classList.add("text-blue-600");
                link.nextElementSibling!.classList.add("scale-100");
              } else {
                link.classList.remove("text-blue-600");
                link.classList.remove("text-gray-700");
                link.nextElementSibling!.classList.remove("scale-100");
              }
            });

            menuSmall.forEach((link) => {
              if (link.getAttribute("href") === `#${sectionId}`) {
                link.classList.remove("text-gray-700");
                link.classList.add("text-blue-600");
                link.nextElementSibling!.classList.add("scale-100");
              } else {
                link.classList.remove("text-blue-600");
                link.classList.remove("text-gray-700");
                link.nextElementSibling!.classList.remove("scale-100");
              }
            });
          }
        });
      },
      {
        rootMargin: "0px 0px -30% 0px",
        threshold: 0.1,
      }
    );

    sections.forEach((section) => {
      observer.observe(section);
    });
  });
</script>
